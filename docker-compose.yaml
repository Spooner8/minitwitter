name: minitwitter

services:
    loadbalancer:
        image: nginx
        container_name: loadbalancer
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
            - '80:80'
        restart: always
        networks:
            - minitwitter

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        ports:
            - '9090:9090'
        restart: always
        networks:
            - minitwitter

    grafana:
        image: grafana/grafana
        container_name: grafana
        ports:
            - '3100:3000'
        restart: always
        networks:
            - minitwitter
    db:
        container_name: db
        image: postgres
        ports:
            - '5432:5432'
        env_file:
            - db.env
        volumes:
            - minitwitter-db:/var/lib/postgresql/data
        networks:
            - minitwitter
        restart: always

    api-1:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: api-1
        image: spoonersl/minitwitter
        env_file:
            - api.env
        depends_on:
            - db
        command: /bin/sh -c "bunx drizzle-kit push && bun run prod"
        networks:
            - minitwitter
        restart: always

    api-2:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: api-2
        image: spoonersl/minitwitter
        env_file:
            - api.env
        depends_on:
            - db
        command: /bin/sh -c "bunx drizzle-kit push && bun run prod"
        networks:
            - minitwitter
        restart: always

    minitwitter-worker:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: minitwitter-worker
        image: spoonersl/minitwitter
        env_file:
            - path: api.env
            - path: worker.env
        depends_on:
            - db
        command: /bin/sh -c "bunx drizzle-kit push && bun run prod"
        networks:
            - minitwitter
        restart: always

    app-1:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        container_name: app-1
        image: spoonersl/minitwitter-app
        env_file:
            - app.env
        networks:
            - minitwitter
        restart: always

    ollama-1:
        container_name: ollama-1
        image: ollama/ollama
        ports:
            - '11434:11434'
        volumes:
            - minitwitter-ollama:/root/.ollama
        networks:
            - minitwitter
        restart: always

    redis:
        image: redis/redis-stack:latest
        container_name: redis
        ports:
            - '6379:6379'
            - '8001:8001'
        healthcheck:
            test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
        networks:
            - minitwitter
        restart: always

volumes:
    minitwitter-db:
    minitwitter-ollama:

networks:
    minitwitter:
        driver: bridge
